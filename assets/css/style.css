
body {    
  background-image: url("../img/lightTheme2.jpg");
  background-repeat: no-repeat; /* Do not repeat the image */
  background-size: cover; /* Resize the background image to cover the entire container */
  background-attachment: fixed;   
}

 .dark-mode {
    background-image: url("../img/darkTheme.jpg");
    background-position: center; /* Center the image */
    background-repeat: no-repeat; /* Do not repeat the image */
    background-size: cover; /* Resize the background image to cover the entire container */
    background-attachment: fixed; 
    }
/* By setting display: flex to the body and margin: auto to the .memory-game container, it will be centered both vertically and horizontally.
.memory-game will also be a flex-container. 
 By setting flex-wrap to wrap, flex-items wrap along multiple lines, accordingly to their size. */

 /* To produce the 3D flip effect, I added the perspective property to .memory-game. */

.memory-game {
    width: 640px;
    height: 640px;
    margin: auto;
    display: flex; 
    flex-wrap: wrap;
    perspective: 1000px;
}

/* Each card width and height is calculated with calc() CSS function. Four card each by setting width to 25% and height to 33.333% minus 10px from margin.
In order to position .memory-card children, I added position: relative so I can position the children absolutely, relative to it. */

/* To the .memory-card elements I added transform-style: preserve-3d, to position them in the 3D space created in the parent */

/* transform property to produce the movement effect */

.memory-card{
    width: calc(25% - 10px);
    height: calc(33.333% - 10px);
    margin: 5px;
    position: relative;   
    transform: scale(1); 
    transform-style: preserve-3d;
    transition: transform .5s;
    box-shadow: 1px 1px 1px rgba(0,0,0,.3);
}

/* The :active pseudo class will be triggered every time the element gets clicked and will apply a .2s transition to its size */

.memory-card:active {
    transform: scale(0.97);
    transition: transform .2s;
}

.memory-card.flip{
    transform: rotateY(180deg);
}

/* The property position: absolute set to both front-face and back-face, will remove the elements from the original position, and stack them on top of each other. */

/* To reveal the image underneath it, I applyed backface-visibility: hidden to .front-face and .back-face */

.front-face,
.back-face
{
    width: 100%;
    height: 100%;
    padding: 5px;
    position: absolute;
    border-radius: 5px;
    background: #1c7ccc;
    backface-visibility: hidden;
}

.front-face{
    transform: rotateY(180deg);
}

/* Sweet alert javascript library to get beautiful window messages when game is over or when user win*/

.swal-overlay {
  background-color: rgba(43, 165, 137, 0.45);
}
.swal-text {
  background-color: #FEFAE3;
  padding: 17px;
  border: 1px solid #F0E1A1;
  display: block;
  margin: 22px;
  text-align: center;
  color: #61534e;
}
.swal-footer {
  background-color: rgb(245, 248, 250);
  margin-top: 32px;
  border-top: 1px solid #E9EEF1;
  overflow: hidden;
}

#input {
    width: 35%;    
}

/* Small devices (landscape phones, 576px and up) */
@media screen and (max-width: 576px) { 

    
    .memory-game {
        height: 550px;
        margin-top: 5%;
    }
    .memory-card {
     width: calc(25% - 10px);
     height: calc(20% - 0px);
     /* margin-top: 40px; */
 }   
}

/* Medium devices (tablets, 768px and up) */
@media (min-width: 768px) { 

    .memory-game {
        height: 600px;
        margin-top: 5%;
    }
    .memory-card{
     width: calc(25% - 10px);
    height: calc(30% - 10px);
 }
}

/* Large devices (desktops, 992px and up) */
@media (min-width: 992px) { 
    .memory-game {
        height: 700px;
        margin-top: 10%;
    }
   .memory-card{
     width: calc(25% - 10px);
    height: calc(35% - 10px);
 }
}

/* X-Large devices (large desktops, 1200px and up) */
@media (min-width: 1200px) { 

    .memory-game {   
    height: 440px;
    margin: auto;
    }
    
 .memory-card{
     width: calc(25% - 10px );
    height: calc(35% - 10px);
    
 }

 .front-face,
.back-face {
    padding: 0%;
}
}

 /* XX-Large devices (larger desktops, 1400px and up) */
@media (min-width: 1400px) { 
    .memory-game {  
         height: 640px;
        margin-top: 5%;
    }

     .memory-card{
     width: calc(25% - 10px);
    height: calc(30% - 10px);
 }
 .front-face,
.back-face {
    padding: 5%;
}
       
}
 


